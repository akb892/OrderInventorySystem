package com.cg.ims.entity;

import java.util.List;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotBlank;

@Entity
@Table(name = "customers") // Defines the table name in the database
public class Customers {

    // Unique identifier for the customer (primary key)
    @Id
    @Column(name = "customer_id") // Maps to the customer_id column in the database
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Auto-generated by the database
    private int customerId;

    // Email address of the customer, can be null
    @Column(name = "email_address") // Maps to the email_address column in the database
    private String emailAddress;

    // Full name of the customer
    @Column(name = "full_name") // Maps to the full_name column in the database
    private String fullName;

    // A customer can have multiple orders, linked by the "customer" field in Orders class
    @OneToMany(mappedBy = "customer", cascade = CascadeType.ALL, fetch = FetchType.LAZY) // Cascade all operations (persist, remove, etc.)
    
    private List<Orders> order;

    // A customer can have multiple shipments, linked by the "customer" field in Shipments class
    @OneToMany(mappedBy = "customer", cascade = CascadeType.ALL, fetch = FetchType.LAZY) // Cascade all operations (persist, remove, etc.)
    private List<Shipments> shipments;

    // Default constructor
    public Customers() {
    }

    // Constructor with parameters to initialize the customer object with customerId, emailAddress, fullName, and orders
    public Customers(int customerId, String emailAddress, String fullName, List<Orders> order) {
        super();
        this.customerId = customerId;
        this.emailAddress = emailAddress;
        this.fullName = fullName;
        this.order = order;
    }

    // Getter and setter methods for each field

    public int getCustomerId() {
        return customerId;
    }

    public void setCustomerId(int customerId) {
        this.customerId = customerId;
    }

    public String getEmailAddress() {
        return emailAddress;
    }

    public void setEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
    }

    public String getFullName() {
        return fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    // Getter and setter methods for orders
    public List<Orders> getOrder() {
        return order;
    }

    public void setOrder(List<Orders> order) {
        this.order = order;
    }

    // Getter and setter methods for shipments
    public List<Shipments> getShipments() {
        return shipments;
    }

    public void setShipments(List<Shipments> shipments) {
        this.shipments = shipments;
    }
}

